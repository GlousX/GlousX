name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  

jobs:
  build-php:
    name: Prepare PHP
    runs-on: ${{ matrix.image }}
    concurrency: php-build-${{ matrix.php }}

    strategy:
      matrix:
        image: [ubuntu-20.04]
        php: [8.1, 8.2, 8.3]

    steps:
      - name: Build and prepare PHP cache
        uses: pmmp/setup-php-action@3.1.0
        with:
          php-version: ${{ matrix.php }}
          install-path: "./bin"
          pm-version-major: "5"

  phpstan:
    name: PHPStan analysis
    needs: build-php
    runs-on: ${{ matrix.image }}

    strategy:
      fail-fast: false
      matrix:
        image: [ubuntu-20.04]
        php: [8.1, 8.2, 8.3]

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: pmmp/setup-php-action@3.1.0
        with:
          php-version: ${{ matrix.php }}
          install-path: "./bin"
          pm-version-major: "5"

      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php

      - name: Restore Composer package cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/composer/files
            ~/.cache/composer/vcs
          key: "composer-v2-cache-${{ matrix.php }}-${{ hashFiles('./composer.lock') }}"
          restore-keys: |
            composer-v2-cache-

      - name: Install Composer dependencies
        run: php composer.phar install --prefer-dist --no-interaction

      - name: Run PHPStan
        run: ./vendor/bin/phpstan analyze --no-progress --memory-limit=2G

  phpunit:
    name: PHPUnit tests
    needs: build-php
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image: [ubuntu-20.04]
        php: [8.1, 8.2, 8.3]

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: pmmp/setup-php-action@3.1.0
        with:
          php-version: ${{ matrix.php }}
          install-path: "./bin"
          pm-version-major: "5"

      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php

      - name: Restore Composer package cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/composer/files
            ~/.cache/composer/vcs
          key: "composer-v2-cache-${{ matrix.php }}-${{ hashFiles('./composer.lock') }}"
          restore-keys: |
            composer-v2-cache-

      - name: Install Composer dependencies
        run: php composer.phar install --prefer-dist --no-interaction

      - name: Run PHPUnit tests
        run: ./vendor/bin/phpunit --bootstrap vendor/autoload.php --fail-on-warning tests/phpunit

  integration:
    name: Integration tests
    needs: build-php
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image: [ubuntu-20.04]
        php: [8.1, 8.2, 8.3]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup PHP
        uses: pmmp/setup-php-action@3.1.0
        with:
          php-version: ${{ matrix.php }}
          install-path: "./bin"
          pm-version-major: "5"

      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php

      - name: Restore Composer package cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/composer/files
            ~/.cache/composer/vcs
          key: "composer-v2-cache-${{ matrix.php }}-${{ hashFiles('./composer.lock') }}"
          restore-keys: |
            composer-v2-cache-

      - name: Install Composer dependencies
        run: php composer.phar install --no-dev --prefer-dist --no-interaction

      - name: Run integration tests
        run: chmod a+x tests/travis.sh && ./tests/travis.sh

      - name: Run PHP-CS-Fixer
        run: php-cs-fixer fix --dry-run --diff --ansi
